# Задача 34:  Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, 
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов 
# (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. 
# Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами. 
# Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает в программу с клавиатуры. 
# В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в 
# порядке
# *Пример:*
# **Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да    
# **Вывод:** Парам пам-пам  



print() # для красивого вывода
print() # для красивого вывода в конслоль двух задач

# если с вводаwords = ("Введите фразу для проверки: ")

def vinni_the_pooh(phrase):
    st = phrase.lower().split()
    f = lambda x: sum(1 for i in x if i in 'аеёиоуыэюя')
    temp = f(st[0])
    if all([f(i) == temp for i in st]):
        return 'Парам пам-пам'
    return 'Пам парам'

print(vinni_the_pooh('ghbhkaalkjh'))
print(vinni_the_pooh('Ма-ма-ма, ма-ма-ма,Маша кушает сама.Ра-ра-ра, Ра-ра-ра,Одеваться нам пора.Та-та-та, та-та-та,Рыжий хвостик у кота'))

# print(vinni_the_pooh(words))

#________________________________________________________________________________________________________________________

# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6), 
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны. 
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля). Примечание: бинарной операцией 
# называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.
# *Пример:*
# **Ввод:** `print_operation_table(lambda x, y: x * y) ` 
# **Вывод:**
# 1 2 3 4 5 6
# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36
# ____________________________________________

# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля)
# Потому что при выполнении итераций при умножении на ноль - всегда будет 0
# ____________________________________________
print() # для разделения выводов двух задач между собой
print() # для разделения выводов двух задач между собой

def matrix_output(oper, num_rows=6, num_columns=6):
    for i in range(1, num_rows + 1):
        out = []
        for j in range(1, num_columns + 1):
            out.append(str(oper(i, j)))
        print(" ".join(out))


matrix_output(lambda x, y: x * y)
